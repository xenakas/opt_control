gr[7,8]<-gr[8,7]<-51
gr[7,11]<-45
gr[7,13]<-50
gr[8,9]<-47
gr[8,11]<-46
gr[9,11]<-52
gr[9,15]<-49
gr[10,12]<-48
gr[11,13]<-47
gr[11,14]<-57
gr[12,14]<-53
gr[12,15]<-43
library(igraph)
igr<-gr
igr<-igraph::graph.adjacency(adjmatrix=igr,weighted=TRUE,mode="directed")
plot(igr, edge.label=round(c(45,47,53,50,48,41,49,53,49,40,48,41,39,51,45,50,51,47,46,52,49,48,47,57,53,43)))
deikstra(gr,1,14)
otvet(1:3,13:15)
s<-matrix(sample(1:100), ncol=4, nrow=4)
print(s)
n<-nrow(s)
m<-ncol(s)
for (k in 1:(m-2)) {
x<-s[,k]
for (j in 2:n) {
for (i in 2:n) {
if (x[i-1]>x[i]) {
z<-x[i-1]
x[i-1]<-x[i]
x[i]<-z
}
}
}
s[,k]<-x
}
k<-(m-1)
x<-s[,k]
y<-s[,m]
for (j in 2:n) {
for (i in 2:n) {
if (x[i-1]>x[i]) {
z<-x[i-1]
x[i-1]<-x[i]
x[i]<-z
z<-y[i-1]
y[i-1]<-y[i]
y[i]<-z
}
}
}
s[,k]<-x
s[,m]<-y
print(s)
s1<-s<-matrix(sample(1:100), ncol=4, nrow=4)
print(s)
n<-nrow(s)
m<-ncol(s)
for (k in 1:m) {
x<-s[,k]
for (j in 2:n) {
for (i in 2:n) {
if (x[i-1]>x[i]) {
z<-x[i-1]
x[i-1]<-x[i]
x[i]<-z
}
}
}
s[,k]<-x
}
print(s)
print(s1)
for (j in 2:n) {
for (i in 2:n) {
if (x[i-1]>x[i]) {
z<-x[i-1]
x[i-1]<-x[i]
x[i]<-z
z<-y[i-1]
y[i-1]<-y[i]
y[i]<-z
}
}
}
s[,k]<-x
s[,m]<-y
print(s)
s<-matrix(sample(1:100), ncol=4, nrow=4)
print(s)
n<-nrow(s)
m<-ncol(s)
for (k in 1:(m-2)) {
x<-s[,k]
for (j in 2:n) {
for (i in 2:n) {
if (x[i-1]>x[i]) {
z<-x[i-1]
x[i-1]<-x[i]
x[i]<-z
}
}
}
s[,k]<-x
}
k<-(m-1)
x<-s[,k]
y<-s[,m]
for (j in 2:n) {
for (i in 2:n) {
if (x[i-1]>x[i]) {
z<-x[i-1]
x[i-1]<-x[i]
x[i]<-z
z<-y[i-1]
y[i-1]<-y[i]
y[i]<-z
}
}
}
s[,k]<-x
s[,m]<-y
print(s)
s1<-s<-matrix(sample(1:100), ncol=4, nrow=4)
print(s)
n<-nrow(s)
m<-ncol(s)
for (k in 1:m) {
x<-s[,k]
for (j in 2:n) {
for (i in 2:n) {
if (x[i-1]>x[i]) {
z<-x[i-1]
x[i-1]<-x[i]
x[i]<-z
}
}
}
s[,k]<-x
}
print(s)
print(s1)
newGraph<-function(n){                              #???????? ?????
G <- matrix(0,n,n)
return(G)
}
removeEdge<-function(G,a1,a2){                      #???????? ????
if((a1<=n)&(a2<=n)&(a1>0)&(a1>0)) {
G[a1,a2]<-0
G[a2,a1]<-0
} else {
print("???? ?? ??????????? ?????")
}
return(G)
}
addEdge<-function(G,a1,a2){                        #?????????? ????
if((a1<=n)&(a2<=n)&(a1>0)&(a1>0)) {
G[a1,a2]<-1
G[a2,a1]<-1
}else{
print("???? ?? ??????????? ?????")
}
return(G)
}
wave<-function(G,k){                               #?????? ?? ????????? ????????? ??? ??????? k
w<-rep(-1,n)
if(G[k,k]!=0){
w[k]<-1
}else{
w[k]<-0
}
L<-c(k)                                          #?????? ? ?????????? ???????
N<-c()                                           #?????? ?????? ??????
S<-1                                             #????????? ??????? 1
while (length(L)>0){
for(i in 1:length(L)){
for(j in 1:length(w)){
if (G[L[i],j]>0 & w[j]==-1){               #???? ?????????? ?????, ? ??????? ????? ??????? ?? i, ? ????? ?? ???.???????
w[j]<-S                                  #??????????? ???????
N<-c(N,j)                                #????????? ???????? ????? ? ?????? ??????
}
}
}
if (length(N)==0){                             #???? ?? ???? ?????? ??????????, ?????? w
return(w)
}
L<-N                                           #L - ????? ???????? ?????
N<-c()
S<-S+1                                         #????????? ?? ????????? ???????
}
return(w)
}
adj<-function(G,v1){                               #????? ??????? ??????
A<-c()
for(i in 1:n){                                   #???? ?????????? ?????, ????????? ??????? ??????? ? ?????? ??????
if(G[v1,i]>0){
A<-c(A,i)
}
}
return(A)
}
twotops<-function(G,v1,v2){                        #?????????? ???? ?? ????????? ?????????
L<-wave(G,v1)                                    #?????? ??? ????????? ???????
L[v1]<-0
K<-c(v2)                                         #???????? ???????
k<-n
for (i in 1:(n-1)){
for (j in 1:n){
if (L[j]==(L[v2]-1)){
if (G[j,v2]>0){
K[i+1]<-j
k<-j
}
}
}
v2<-k
}
N<-which(is.na(K))
if(length(N)==0 & length(K)!=1){
return(K)}else{return(Inf)}
}
cycle<-function(G,k1,k2,l1,l2){                     #????? ?????
if(G[k1,k2]>0 & G[l1,l2]>0){                      #???? ??? ????? ??????????
G<-removeEdge(G,k1,k2)
G<-removeEdge(G,l1,l2)                          #??????? ??? ?????
D<-wave(G,l1)                                   #?????? ?? ????????? ????????? ? ????? ??? ???????? ?????
s<-c()
for(i in 1:length(D)){                          #????? ????????
if(D[i]==-1){
s=c(s,i)
}
}
if(k1==l1){
A1<-twotops(G,k2,l2)
return(c(A1,l1))
}else{
if(k1==l2){
A1<-twotops(G,k2,l1)
return(c(A1,l2))
}else{
if(k2==l1){
A1<-twotops(G,k1,l2)
return(c(A1,l1))
}else{
if(k2==l2){
A1<-twotops(G,k1,l1)
return(c(A1,l2))
}else{
if(length(s)>0){
G<-addEdge(G,k1,k2)
A1<-twotops(G,l1,l2)
B1<-c(which(A1[]==k1),which(A1[]==k2))
if(length(B1)==2){
return(A1)
}else{
print("?????????? ??????? ??????????? ????, ?????????? ??? ???????? ?????")
}
}else{                         #???? ???????? ???, ????????? ?????????? ?? ??????
A1<-twotops(G,k1,l2)
A2<-twotops(G,k1,l1)
A3<-twotops(G,l1,k2)
A4<-twotops(G,l2,k2)
B1<-c(A1,A3)
B2<-c(A2,A4)
if(length(B1)==length(B2)){
return(B1)
}else{
if(length(B1)>length(B2)){
return(B2)
}else{
return(B1)
}
}
}
}
}
}
}
}else{
print("???? ?? ????? ??? ??? ???????? ????? ???????????")
}
}
G<-newGraph(10)
n<-dim(G)[1]
G<-addEdge(G,1,2)
G<-addEdge(G,1,3)
G<-addEdge(G,1,4)
G<-addEdge(G,1,6)
G<-addEdge(G,2,6)
G<-addEdge(G,4,3)
G<-addEdge(G,3,5)
G<-addEdge(G,3,6)
G<-addEdge(G,4,5)
G<-addEdge(G,4,6)
G<-addEdge(G,4,7)
G<-addEdge(G,10,6)
G<-addEdge(G,7,9)
G<-addEdge(G,8,9)
library(igraph)
G<-igraph::graph.adjacency(adjmatrix=G,mode="undirected")
plot(G)
cycle(G,1,2,4,3)
cycle(G,8,9,5,3)
cycle(G,5,10,1,6)
cycle(G,4,6,6,2)
wave(G,5)
twotops(G,5,10)
G<-igraph::graph.adjacency(adjmatrix=G,mode="undirected")
G<-addEdge(G,3,5)
newGraph<-function(n){                              #???????? ?????
G <- matrix(0,n,n)
return(G)
}
removeEdge<-function(G,a1,a2){                      #???????? ????
if((a1<=n)&(a2<=n)&(a1>0)&(a1>0)) {
G[a1,a2]<-0
G[a2,a1]<-0
} else {
print("???? ?? ??????????? ?????")
}
return(G)
}
addEdge<-function(G,a1,a2){                        #?????????? ????
if((a1<=n)&(a2<=n)&(a1>0)&(a1>0)) {
G[a1,a2]<-1
G[a2,a1]<-1
}else{
print("???? ?? ??????????? ?????")
}
return(G)
}
wave<-function(G,k){                               #?????? ?? ????????? ????????? ??? ??????? k
w<-rep(-1,n)
if(G[k,k]!=0){
w[k]<-1
}else{
w[k]<-0
}
L<-c(k)                                          #?????? ? ?????????? ???????
N<-c()                                           #?????? ?????? ??????
S<-1                                             #????????? ??????? 1
while (length(L)>0){
for(i in 1:length(L)){
for(j in 1:length(w)){
if (G[L[i],j]>0 & w[j]==-1){               #???? ?????????? ?????, ? ??????? ????? ??????? ?? i, ? ????? ?? ???.???????
w[j]<-S                                  #??????????? ???????
N<-c(N,j)                                #????????? ???????? ????? ? ?????? ??????
}
}
}
if (length(N)==0){                             #???? ?? ???? ?????? ??????????, ?????? w
return(w)
}
L<-N                                           #L - ????? ???????? ?????
N<-c()
S<-S+1                                         #????????? ?? ????????? ???????
}
return(w)
}
adj<-function(G,v1){                               #????? ??????? ??????
A<-c()
for(i in 1:n){                                   #???? ?????????? ?????, ????????? ??????? ??????? ? ?????? ??????
if(G[v1,i]>0){
A<-c(A,i)
}
}
return(A)
}
twotops<-function(G,v1,v2){                        #?????????? ???? ?? ????????? ?????????
L<-wave(G,v1)                                    #?????? ??? ????????? ???????
L[v1]<-0
K<-c(v2)                                         #???????? ???????
k<-n
for (i in 1:(n-1)){
for (j in 1:n){
if (L[j]==(L[v2]-1)){
if (G[j,v2]>0){
K[i+1]<-j
k<-j
}
}
}
v2<-k
}
N<-which(is.na(K))
if(length(N)==0 & length(K)!=1){
return(K)}else{return(Inf)}
}
cycle<-function(G,k1,k2,l1,l2){                     #????? ?????
if(G[k1,k2]>0 & G[l1,l2]>0){                      #???? ??? ????? ??????????
G<-removeEdge(G,k1,k2)
G<-removeEdge(G,l1,l2)                          #??????? ??? ?????
D<-wave(G,l1)                                   #?????? ?? ????????? ????????? ? ????? ??? ???????? ?????
s<-c()
for(i in 1:length(D)){                          #????? ????????
if(D[i]==-1){
s=c(s,i)
}
}
if(k1==l1){
A1<-twotops(G,k2,l2)
return(c(A1,l1))
}else{
if(k1==l2){
A1<-twotops(G,k2,l1)
return(c(A1,l2))
}else{
if(k2==l1){
A1<-twotops(G,k1,l2)
return(c(A1,l1))
}else{
if(k2==l2){
A1<-twotops(G,k1,l1)
return(c(A1,l2))
}else{
if(length(s)>0){
G<-addEdge(G,k1,k2)
A1<-twotops(G,l1,l2)
B1<-c(which(A1[]==k1),which(A1[]==k2))
if(length(B1)==2){
return(A1)
}else{
print("?????????? ??????? ??????????? ????, ?????????? ??? ???????? ?????")
}
}else{                         #???? ???????? ???, ????????? ?????????? ?? ??????
A1<-twotops(G,k1,l2)
A2<-twotops(G,k1,l1)
A3<-twotops(G,l1,k2)
A4<-twotops(G,l2,k2)
B1<-c(A1,A3)
B2<-c(A2,A4)
if(length(B1)==length(B2)){
return(B1)
}else{
if(length(B1)>length(B2)){
return(B2)
}else{
return(B1)
}
}
}
}
}
}
}
}else{
print("???? ?? ????? ??? ??? ???????? ????? ???????????")
}
}
G<-newGraph(10)
n<-dim(G)[1]
G<-addEdge(G,1,2)
G<-addEdge(G,1,3)
G<-addEdge(G,1,4)
G<-addEdge(G,1,6)
G<-addEdge(G,2,6)
G<-addEdge(G,4,3)
G<-addEdge(G,3,5)
G<-addEdge(G,3,6)
G<-addEdge(G,4,5)
G<-addEdge(G,4,6)
G<-addEdge(G,4,7)
G<-addEdge(G,10,6)
G<-addEdge(G,7,9)
G<-addEdge(G,8,9)
library(igraph)
G<-igraph::graph.adjacency(adjmatrix=G,mode="undirected")
plot(G)
cycle(G,1,2,4,3)
cycle(G,8,9,5,3)
cycle(G,5,10,1,6)
cycle(G,4,6,6,2)
wave(G,5)
twotops(G,5,10)
twotops(G,8,10)
twotops(G,10,8)
n<-20
a<-sample(1:100,n)
b<-sample(1:100,n)
print(a)
print(b)
for (j in 2:n) {
for (i in 2:n) {
if (a[i-1]>a[i]) {
z<-a[i-1]
a[i-1]<-a[i]
a[i]<-z
}
if (b[i-1]>b[i]) {
z<-b[i-1]
b[i-1]<-b[i]
b[i]<-z
}
}
}
na<-matrix(, ncol=2, nrow=n)
na[,1]<-a
na[,2]<-b
ni<-matrix(, ncol=2, nrow=n)
ni[,1]<-a
sa<-0
si<-0
for (i in 1:n) {
ni[i,2]<-b[n-i+1]
pa<-a[i]*b[i]
pi<-a[i]*b[n-i+1]
sa<-sa+pa
si<-si+pi
}
print(na)
print(sa)
print(ni)
print(si)
